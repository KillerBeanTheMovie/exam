ЗАДАЧА 1

Создаем кнопки в Android

Main.java

package com.example.buttons;

import android.os.Bundle;
import android.widget.Button;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       setContentView(R.layout.activity_main);

       Button buttonTop = findViewById(R.id.button_top);
       buttonTop.setOnClickListener(v ->
               Toast.makeText(MainActivity.this, "Нажата Верхняя Кнопка", Toast.LENGTH_SHORT).show()
       );

       Button buttonLeft = findViewById(R.id.button_left);
       buttonLeft.setOnClickListener(v ->
               Toast.makeText(MainActivity.this, "Нажата Левая Кнопка", Toast.LENGTH_SHORT).show()
       );

       Button buttonMiddle = findViewById(R.id.button_middle);
       buttonMiddle.setOnClickListener(v ->
               Toast.makeText(MainActivity.this, "Нажата Кнопка размером 200x100 dp", Toast.LENGTH_SHORT).show()
       );

       Button buttonLarge = findViewById(R.id.button_large);
       buttonLarge.setOnClickListener(v ->
               Toast.makeText(MainActivity.this, "Нажата Большая Кнопка", Toast.LENGTH_SHORT).show()
       );
   }
}


Main activity.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp"
    tools:context=".MainActivity">

    <Button
        android:id="@+id/button_top"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center_horizontal"
        android:layout_marginBottom="8dp"
        android:backgroundTint="#6200EE"
        android:text="Верхняя Кнопка"
        android:textColor="#FFFFFF" />

    <Button
        android:id="@+id/button_left"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="start"
        android:layout_marginBottom="8dp"
        android:backgroundTint="#6200EE"
        android:text="Левая Кнопка"
        android:textColor="#FFFFFF" />

    <Button
        android:id="@+id/button_middle"
        android:layout_width="200dp"
        android:layout_height="100dp"
        android:layout_gravity="center_horizontal"
        android:layout_marginBottom="8dp"
        android:backgroundTint="#6200EE"
        android:text="Кнопка размером 200x100 dp"
        android:textColor="#FFFFFF"
        android:textSize="14sp" />

    <Button
        android:id="@+id/button_large"
        android:layout_width="300dp"
        android:layout_height="150dp"
        android:layout_gravity="center_horizontal"
        android:backgroundTint="#6200EE"
        android:text="Большая Кнопка"
        android:textColor="#FFFFFF"
        android:textSize="18sp" />

</LinearLayout>




ЗАДАЧА 2

Написать видеоплеер

Main.java
package com.example.videoplyer;

import android.net.Uri;
import android.os.Bundle;
import android.widget.Button;
import android.widget.VideoView;
import android.widget.MediaController;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
   private VideoView videoView;
   private Button playButton;
   private Button pauseButton;
   private Button stopButton;

   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       setContentView(R.layout.activity_main);

       videoView = findViewById(R.id.video_view);
       playButton = findViewById(R.id.button_play);
       pauseButton = findViewById(R.id.button_pause);
       stopButton = findViewById(R.id.button_stop);

       // Set up MediaController
       MediaController mediaController = new MediaController(this);
       mediaController.setAnchorView(videoView);
       videoView.setMediaController(mediaController);

       // Set the video URI (replace with your video file URI)
       Uri videoUri = Uri.parse("android.resource://" + getPackageName() + "/" + R.raw.raccoon);
       videoView.setVideoURI(videoUri);

       // Play button functionality
       playButton.setOnClickListener(v -> videoView.start());

       // Pause button functionality
       pauseButton.setOnClickListener(v -> videoView.pause());

       // Stop button functionality
       stopButton.setOnClickListener(v -> {
           videoView.stopPlayback();
           videoView.resume();
       });
   }
}



Main activity.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
   xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:tools="http://schemas.android.com/tools"
   android:layout_width="match_parent"
   android:layout_height="match_parent"
   android:orientation="vertical"
   tools:context=".MainActivity">

   <LinearLayout
       android:layout_width="match_parent"
       android:layout_height="wrap_content"
       android:orientation="horizontal"
       android:gravity="center">

       <Button
           android:id="@+id/button_play"
           android:layout_width="wrap_content"
           android:layout_height="wrap_content"
           android:text="PLAY"/>

       <Button
           android:id="@+id/button_pause"
           android:layout_width="wrap_content"
           android:layout_height="wrap_content"
           android:text="PAUSE"/>

       <Button
           android:id="@+id/button_stop"
           android:layout_width="wrap_content"
           android:layout_height="wrap_content"
           android:text="STOP"/>
   </LinearLayout>

   <VideoView
       android:id="@+id/video_view"
       android:layout_width="match_parent"
       android:layout_height="wrap_content"/>
</LinearLayout>


<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>

android manifest

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Videoplyer"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>




ЗАДАЧА 3

Написать аудиоплеер

Mаin аctivity.jаvа

package com.example.audio;

import android.media.MediaPlayer;
import android.os.Bundle;
import android.widget.Button;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
   private MediaPlayer mediaPlayer;
   private Button playButton;
   private Button pauseButton;
   private Button stopButton;

   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       setContentView(R.layout.activity_main);

       playButton = findViewById(R.id.button_play);
       pauseButton = findViewById(R.id.button_pause);
       stopButton = findViewById(R.id.button_stop);

       // Initialize MediaPlayer with a sample audio file (replace with your audio file)
       mediaPlayer = MediaPlayer.create(this, R.raw.sound);

       // Play button functionality
       playButton.setOnClickListener(v -> {
           if (mediaPlayer != null) {
               mediaPlayer.start();
           }
       });

       // Pause button functionality
       pauseButton.setOnClickListener(v -> {
           if (mediaPlayer != null && mediaPlayer.isPlaying()) {
               mediaPlayer.pause();
           }
       });

       // Stop button functionality
       stopButton.setOnClickListener(v -> {
           if (mediaPlayer != null) {
               mediaPlayer.stop();
               mediaPlayer.reset();
               mediaPlayer = MediaPlayer.create(this, R.raw.sound);
           }
       });
   }

   @Override
   protected void onDestroy() {
       super.onDestroy();
       if (mediaPlayer != null) {
           mediaPlayer.release();
           mediaPlayer = null;
       }
   }
}




Mаin аctivity.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
   xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:tools="http://schemas.android.com/tools"
   android:layout_width="match_parent"
   android:layout_height="match_parent"
   android:orientation="vertical"
   tools:context=".MainActivity">

   <LinearLayout
       android:layout_width="match_parent"
       android:layout_height="wrap_content"
       android:orientation="horizontal"
       android:gravity="center">

       <Button
           android:id="@+id/button_play"
           android:layout_width="wrap_content"
           android:layout_height="wrap_content"
           android:text="Старт"/>

       <Button
           android:id="@+id/button_pause"
           android:layout_width="wrap_content"
           android:layout_height="wrap_content"
           android:text="Пауза"/>

       <Button
           android:id="@+id/button_stop"
           android:layout_width="wrap_content"
           android:layout_height="wrap_content"
           android:text="Стоп"/>
   </LinearLayout>
</LinearLayout>


mаnifest

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>


    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Audio"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>




ЗАДАЧА 4

Изменить картинку по нажатию кнопки

Mаin аctivity.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#4a5c7d"
    tools:context=".MainActivity">

    <ImageView
        android:id="@+id/imageView"
        android:layout_width="150dp"
        android:layout_height="150dp"
        android:layout_alignParentStart="true"
        android:layout_alignParentTop="true"
        android:layout_margin="16dp"
        android:scaleType="fitCenter"
        android:src="@drawable/image1" />

    <Button
        android:id="@+id/firstButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/imageView"
        android:layout_marginTop="20dp"
        android:layout_centerHorizontal="true"
        android:text="FIRST IMAGE" />

    <Button
        android:id="@+id/secondButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/firstButton"
        android:layout_marginTop="10dp"
        android:layout_centerHorizontal="true"
        android:text="SECOND IMAGE" />
</RelativeLayout>



Mаin аctivity.jаvа

package com.example.kartinki;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private ImageView imageView;
    private Button firstButton;
    private Button secondButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        imageView = findViewById(R.id.imageView);
        firstButton = findViewById(R.id.firstButton);
        secondButton = findViewById(R.id.secondButton);

        firstButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                imageView.setImageResource(R.drawable.image1);
            }
        });

        secondButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                imageView.setImageResource(R.drawable.image2);
            }
        });
    }
}





ЗАДАЧА 5

ArrayAdapter

Mаin аctivity.jаvа

package com.example.arry;

import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

   private ListView listView;

   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       setContentView(R.layout.activity_main);

       listView = findViewById(R.id.listView);

       String[] items = {"cow", "bull", "bison", "elephant", "calf", "hippo"};
       ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, items);

       listView.setAdapter(adapter);

       listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
           @Override
           public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
               String selectedItem = (String) parent.getItemAtPosition(position);
               Toast.makeText(MainActivity.this, selectedItem + " clicked", Toast.LENGTH_SHORT).show();
           }
  });
}
}



Mаin аctivity.xml

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:tools="http://schemas.android.com/tools"
   android:layout_width="match_parent"
   android:layout_height="match_parent"
   android:orientation="vertical"
   tools:context=".MainActivity">

   <ListView
       android:id="@+id/listView"
       android:layout_width="match_parent"
       android:layout_height="match_parent" />
</LinearLayout>





ЗАДАЧА 7

Android RatingBar

Main.Java

package com.example.ratingapp;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.RatingBar;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private RatingBar ratingBar;
    private Button submitButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        ratingBar = findViewById(R.id.ratingBar);
        submitButton = findViewById(R.id.submitButton);

        submitButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                float rating = ratingBar.getRating();
                Toast.makeText(MainActivity.this, "Rating: " + rating, Toast.LENGTH_SHORT).show();
            }
        });
    }
}


Xml

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#ffffff"
    tools:context=".MainActivity">

    <RatingBar
        android:id="@+id/ratingBar"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="100dp"
        android:numStars="5"
        android:stepSize="1.0"
        android:rating="0"
        android:isIndicator="false"
        android:theme="@style/Widget.AppCompat.RatingBar.Small"/>

    <Button
        android:id="@+id/submitButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@id/ratingBar"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="20dp"
        android:text="SUBMIT" />
</RelativeLayout>

ЗАДАЧА 8 

Main.java

import android.support.v4.app.FragmentActivity;
	import android.os.Bundle;
	 
	import com.google.android.gms.maps.CameraUpdateFactory;
	import com.google.android.gms.maps.GoogleMap;
	import com.google.android.gms.maps.OnMapReadyCallback;
	import com.google.android.gms.maps.SupportMapFragment;
	import com.google.android.gms.maps.model.LatLng;
	import com.google.android.gms.maps.model.MarkerOptions;
	 
	public class MapsActivity extends FragmentActivity implements OnMapReadyCallback {
	 
	    private GoogleMap mMap;
	 
	    @Override
	    protected void onCreate(Bundle savedInstanceState) {
	        super.onCreate(savedInstanceState);
	        setContentView(R.layout.activity_maps);
	        // Obtain the SupportMapFragment and get notified when the map is ready to be used.
	        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()
	                .findFragmentById(R.id.map);
	        mapFragment.getMapAsync(this);
	    }
	 
	 
	    /**
	     * Manipulates the map once available.
	     * This callback is triggered when the map is ready to be used.
	     * This is where we can add markers or lines, add listeners or move the camera. In this case,
	     * we just add a marker near Sydney, Australia.
	     * If Google Play services is not installed on the device, the user will be prompted to install
	     * it inside the SupportMapFragment. This method will only be triggered once the user has
	     * installed Google Play services and returned to the app.
	     */
	    @Override
	    public void onMapReady(GoogleMap googleMap) {
	        mMap = googleMap;
	 
	        // Add a marker in Sydney and move the camera
	        LatLng sydney = new LatLng(-34, 151);
        //LatLng almaty = new LatLng(43.26, 76.94);

	        mMap.addMarker(new MarkerOptions().position(sydney).title("Marker in Sydney"));
	        mMap.moveCamera(CameraUpdateFactory.newLatLng(sydney));
	    }
	}

key AIzaSyDlrysRab7buK9aufWAvtt_HbOFAGI0KnE

manifest

<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
<uses-permission android:name="android.permission.INTERNET"/>
